swagger: "2.0"
info:
  version: "1.0.0"
  title: "Swagger Hackboard"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
- name: "project"
  description: "The Projects API"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "http"
paths:
  /projects:
    get:
      tags:
      - "project"
      summary: "List all projects"
      operationId: "listProjects"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProjectDto"
    post:
      tags:
      - "project"
      summary: "Add a new project"
      operationId: "addProject"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "project"
        required: true
        schema:
          $ref: "#/definitions/ProjectDto"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "boolean"
    put:
      tags:
      - "project"
      summary: "Edit project"
      operationId: "editProject"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "project"
        required: true
        schema:
          $ref: "#/definitions/ProjectDto"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "boolean"
  /projects/{projectId}:
    get:
      tags:
      - "project"
      summary: "View Project"
      operationId: "viewProject"
      produces:
      - "application/json"
      parameters:
      - name: "projectId"
        in: "path"
        description: "ID of project"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProjectDto"
    delete:
      tags:
      - "project"
      summary: "Delete Project"
      operationId: "deleteProject"
      produces:
      - "application/json"
      parameters:
      - name: "projectId"
        in: "path"
        description: "ID of project"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "boolean"

definitions:
  ProjectDto:
    type: "object"
    required:
      - "title"
      - "description"
      - "owner_id"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      description:
        type: "string"
      ownerId:
        type: "integer"
        format: "int64"


